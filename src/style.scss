// Copyright (c) Alaska Air. All right reserved. Licensed under the Apache-2.0 license
// See LICENSE in the project root for license information.

// ---------------------------------------------------------------------
// Import Auro CSS Properties as Sass file
@import "./node_modules/@alaskaairux/orion-design-tokens/dist/tokens/SassCustomProperties";

// Import Auro Sass variables
@import "./node_modules/@alaskaairux/orion-design-tokens/dist/tokens/SCSSVariables";

// general WCSS imports
@import "./node_modules/@alaskaairux/orion-web-core-style-sheets/dist/breakpoints";
@import "./node_modules/@alaskaairux/orion-web-core-style-sheets/dist/core";

@import "./node_modules/@alaskaairux/orion-design-tokens/dist/tokens/SCSSVariableMap";

$auro-inset-spacing-options: lg;
$auro-inset-directions:'--squish';
@import "./node_modules/@alaskaairux/orion-web-core-style-sheets/dist/utilityMixins/insetUtility";

// container styles - defines the look of the outer custom component
:host {
  display: block;
}

:host(auro-inputoption-group) {
  padding-bottom: var(--size-scale-med);
}

// layout styles - define any layout specifications for UI that is contained WITHIN the component
// never define layout that would cause effect on element outside the scope of this component
/*
@mixin focus-visible {
  .displayFlex {
    .auro-inputGroup:focus-within {
      width: var(--host-focus-display-flex-width);
    }
  }

  .auro-inputOption {
    background-color: var(--host-focus-inputgroup-background-color);
    color: var(--host-focus-inputgroup-color);

    &:after {
      border-color: var(--color-base-shark);
    }

    & + .auro-inputLabel {
      color: var(--host-focus-inputgroup-color);
    }
  }

  .auro-inputGroup {
    display: var(--host-focus-inputgroup-display);
    background-color: var(--host-focus-inputgroup-background-color);

    padding-right: var(--host-focus-inputgroup-padding-right);
    margin-right: var(--host-focus-inputgroup-margin-right);

    .auro-inputLabel--radio {
      &:before {
        background-color: var(--host-focus-inputgroup-radio-label-before-backgroundcolor);
      }

      &:after {
        border-color: var(--host-focus-inputgroup-radio-label-after-bordercolor);
      }
    }

    .auro-inputLabel--checkbox {
      &:before,
      &:after {
        border-color: var(--colors-focus-backgroundborder);
      }
    }
  }
}

// component shape styles
:host(.focus-visible) {
  @include focus-visible;
}

.displayFlex {
  @include auro_breakpoint--sm {
    display: var(--display-flex-breakpoint-narrow-display);

    .auro-inputGroup {
      margin-left: var(--auro-inputgroup-breakpoint-narrow-margin-left);

      &:first-child {
        margin-left: var(--auro-inputgroup-breakpoint-narrow-first-child);
      }
    }
  }
}

.auro-inputGroup {
  position: var(--auro-inputgroup-position);
  line-height: var(--auro-inputgroup-line-height);
  padding-left: var(--auro-inputgroup-padding-left);
}

.auro-inputOption {
  &:disabled {
    & + .auro-inputLabel {
      color: var(--auro-inputoption-disabled-label-color);
    }
    & + .auro-inputLabel--checkbox {
      &:before,
      &:after {
        border-color: var(--auro-inputoption-disabled-checkbox-psudo-border-color);
      }
    }

    & + .auro-inputLabel--radio {
      &:after {
        border-color: var(--auro-inputoption-disabled-radio-after-border-color);
      }
      &:before {
        background-color: var(--auro-inputoption-disabled-radio-before-background-color);
      }
    }
  }
  &:checked {
    & + .auro-inputLabel {
      &:after {
        opacity: var(--auro-inputoption-checked-label-after-opacity);
      }
      &:before {
        transition: var(--auro-inputoption-checked-label-before-transition-fulltransition);
        opacity: var(--auro-inputoption-checked-label-before-opacity);
      }
    }
  }
}

.auro-inputLabel {
  margin-left: var(--auro-inputlabel-margin-left);
  display: var(--auro-inputlabel-display);

  &:after {
    -webkit-tap-highlight-color: transparent;
    position: var(--auro-inputlabel-after-position);
    content: '';
    top: var(--auro-inputlabel-after-top);
    left: var(--auro-inputlabel-after-left);
    width: var(--auro-inputlabel-after-width);
    height: var(--auro-inputlabel-after-height);
    border: var(--auro-inputlabel-after-border);
    z-index: var(--auro-inputlabel-after-z-index);
  }

  &:before {
    content: '';
    position: var(--auro-inputlabel-before-position);
    opacity: var(--auro-inputlabel-before-opacity);
    pointer-events: var(--auro-inputlabel-before-pointer-events);
    z-index: var(--auro-inputlabel-before-z-index);
  }
}

.auro-inputLabel--radio {
  &:after {
    border-radius: var(--auro-inputlabel-radio-after-border-radius);
  }

  &:before {
    top: var(--auro-inputlabel-radio-before-top);
    left: var(--auro-inputlabel-radio-before-left);
    width: var(--auro-inputlabel-radio-before-width);
    height: var(--auro-inputlabel-radio-before-height);
    border-radius: var(--auro-inputlabel-radio-before-border-radius);
    background-color: var(--auro-inputlabel-radio-before-background-color);
    transform: var(--auro-inputlabel-radio-before-border-transform);
  }
}

.auro-inputLabel--checkbox {
  &:after {
    border-radius: var(--auro-inputlabel-checkbox-after-border-radius);
  }

  &:before {
    top: var(--auro-inputlabel-checkbox-before-top);
    left: var(--auro-inputlabel-checkbox-before-left);
    width: var(--auro-inputlabel-checkbox-before-width);
    height: var(--auro-inputlabel-checkbox-before-height);
    border-style: var(--auro-inputlabel-checkbox-before-border-style);
    border-color: var(--auro-inputlabel-checkbox-before-border-color);
    border-width: var(--auro-inputlabel-checkbox-before-border-width);
    transform: var(--auro-inputlabel-checkbox-before-transform);
  }
}

.errorText {
  color: var(--error-text-color);
  margin-bottom: 0;
}

.auro-inputLabel--radio {
  &.errorBorder {
    &:after {
      border-color: var(--auro-inputlabel-radio-error-border-after-border-color);
    }
    &:before {
      background-color: var(--auro-inputlabel-radio-error-border-before-background-color);
    }
  }
}

.auro-inputLabel--checkbox {
  &.errorBorder {
    &:before,
    &:after {
      border-color: var(--auro-inputlabel-checkbox-error-border-before-after-border-color);
    }
  }
}

.auro-label {
  color: var(--auro-label-color);
  margin-bottom: var(--auro-label-margin-bottom);
  display: var(--auro-label-display);
}
*/